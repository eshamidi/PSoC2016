ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"MIN_TIME.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MIN_TIME_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	MIN_TIME_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	MIN_TIME_Enable, %function
  23              	MIN_TIME_Enable:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\MIN_TIME.c"
   1:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/MIN_TIME.c **** * File Name: MIN_TIME.c
   3:.\Generated_Source\PSoC4/MIN_TIME.c **** * Version 2.70
   4:.\Generated_Source\PSoC4/MIN_TIME.c **** *
   5:.\Generated_Source\PSoC4/MIN_TIME.c **** * Description:
   6:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC4/MIN_TIME.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC4/MIN_TIME.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC4/MIN_TIME.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC4/MIN_TIME.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC4/MIN_TIME.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC4/MIN_TIME.c **** *  or a capture event.
  14:.\Generated_Source\PSoC4/MIN_TIME.c **** *
  15:.\Generated_Source\PSoC4/MIN_TIME.c **** * Note:
  16:.\Generated_Source\PSoC4/MIN_TIME.c **** *
  17:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
  18:.\Generated_Source\PSoC4/MIN_TIME.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/MIN_TIME.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/MIN_TIME.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/MIN_TIME.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  24:.\Generated_Source\PSoC4/MIN_TIME.c **** #include "MIN_TIME.h"
  25:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  26:.\Generated_Source\PSoC4/MIN_TIME.c **** uint8 MIN_TIME_initVar = 0u;
  27:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  28:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  29:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_Init
  31:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
  32:.\Generated_Source\PSoC4/MIN_TIME.c **** *
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 2


  33:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
  34:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC4/MIN_TIME.c **** *
  36:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
  37:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
  38:.\Generated_Source\PSoC4/MIN_TIME.c **** *
  39:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
  40:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
  41:.\Generated_Source\PSoC4/MIN_TIME.c **** *
  42:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_Init(void) 
  44:.\Generated_Source\PSoC4/MIN_TIME.c **** {
  45:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(!MIN_TIME_UsingFixedFunction)
  46:.\Generated_Source\PSoC4/MIN_TIME.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC4/MIN_TIME.c ****             uint8 MIN_TIME_interruptState;
  48:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  50:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (MIN_TIME_UsingFixedFunction)
  51:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= MIN_TIME_CTRL_ENABLE;
  53:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  54:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_CONTROL2 &= ((uint8)(~MIN_TIME_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  59:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_CONTROL3 &= ((uint8)(~MIN_TIME_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  63:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC4/MIN_TIME.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  69:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_RunModeUsed == 2)
  70:.\Generated_Source\PSoC4/MIN_TIME.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC4/MIN_TIME.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC4/MIN_TIME.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  76:.\Generated_Source\PSoC4/MIN_TIME.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC4/MIN_TIME.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC4/MIN_TIME.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  82:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  84:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC4/MIN_TIME.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL2 |= MIN_TIME_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC4/MIN_TIME.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC4/MIN_TIME.c **** 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 3


  90:.\Generated_Source\PSoC4/MIN_TIME.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 &= ((uint8)(~MIN_TIME_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 |= MIN_TIME_CTRL_RCOD;
  94:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  95:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 &= ((uint8)(~MIN_TIME_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 |= MIN_TIME_CTRL_ENBL;
  98:.\Generated_Source\PSoC4/MIN_TIME.c **** 
  99:.\Generated_Source\PSoC4/MIN_TIME.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC4/MIN_TIME.c ****                 MIN_TIME_CONTROL3 |= MIN_TIME_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC4/MIN_TIME.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 103:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 105:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_RT1 &= ((uint8)(~MIN_TIME_RT1_MASK));
 107:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_RT1 |= MIN_TIME_SYNC;
 108:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 109:.\Generated_Source\PSoC4/MIN_TIME.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_RT1 &= ((uint8)(~MIN_TIME_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_RT1 |= MIN_TIME_SYNCDSI_EN;
 112:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 113:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL2 |= MIN_TIME_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 117:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_WritePeriod(MIN_TIME_INIT_PERIOD);
 119:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_WriteCounter(MIN_TIME_INIT_PERIOD);
 120:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 121:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (MIN_TIME_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CAPTURE_COUNT_CTRL |= MIN_TIME_CNTR_ENABLE;
 123:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_SetCaptureCount(MIN_TIME_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 126:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UsingFixedFunction)
 127:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_SetCaptureMode(MIN_TIME_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 131:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC4/MIN_TIME.c ****             #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC4/MIN_TIME.c ****                 if (0u == (MIN_TIME_CONTROL & MIN_TIME__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC4/MIN_TIME.c ****                 {
 135:.\Generated_Source\PSoC4/MIN_TIME.c ****                     MIN_TIME_SetTriggerMode(MIN_TIME_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC4/MIN_TIME.c ****                 }
 137:.\Generated_Source\PSoC4/MIN_TIME.c ****             #endif /* (!MIN_TIME_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 140:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 144:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_STATUS_AUX_CTRL |= MIN_TIME_STATUS_ACTL_INT_EN_MASK;
 146:.\Generated_Source\PSoC4/MIN_TIME.c **** 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 4


 147:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC4/MIN_TIME.c ****         CyExitCriticalSection(MIN_TIME_interruptState);
 149:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 150:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_EnableTriggerMode)
 151:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_EnableTrigger();
 152:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC4/MIN_TIME.c **** 		
 154:.\Generated_Source\PSoC4/MIN_TIME.c **** 		
 155:.\Generated_Source\PSoC4/MIN_TIME.c ****         #if (MIN_TIME_InterruptOnCaptureCount && !MIN_TIME_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC4/MIN_TIME.c ****             MIN_TIME_SetInterruptCount(MIN_TIME_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC4/MIN_TIME.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 159:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_ClearFIFO();
 160:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 162:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_SetInterruptMode(MIN_TIME_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 164:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 165:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 166:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_Enable
 168:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 169:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 170:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 171:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 173:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 174:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 175:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 176:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 177:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 178:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 179:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_Enable(void) 
 181:.\Generated_Source\PSoC4/MIN_TIME.c **** {
  26              		.loc 1 181 0
  27              		.cfi_startproc
 182:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (MIN_TIME_UsingFixedFunction)
 184:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_GLOBAL_ENABLE |= MIN_TIME_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_GLOBAL_STBY_ENABLE |= MIN_TIME_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 188:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED || MIN_TIME_UsingFixedFunction)
 190:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL |= MIN_TIME_CTRL_ENABLE;
  28              		.loc 1 190 0
  29 0000 024B     		ldr	r3, .L2
  30 0002 1978     		ldrb	r1, [r3]
  31 0004 8022     		mov	r2, #128
  32 0006 0A43     		orr	r2, r1
  33 0008 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC4/MIN_TIME.c **** }
  34              		.loc 1 192 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 5


  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 71000F40 		.word	1074724977
  41              		.cfi_endproc
  42              	.LFE1:
  43              		.size	MIN_TIME_Enable, .-MIN_TIME_Enable
  44              		.section	.text.MIN_TIME_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	MIN_TIME_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	MIN_TIME_Stop, %function
  50              	MIN_TIME_Stop:
  51              	.LFB3:
 193:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 194:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 195:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_Start
 197:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 198:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 199:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 200:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC4/MIN_TIME.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC4/MIN_TIME.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 204:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 205:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 206:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 207:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 208:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 209:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 210:.\Generated_Source\PSoC4/MIN_TIME.c **** * Global variables:
 211:.\Generated_Source\PSoC4/MIN_TIME.c **** *  MIN_TIME_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC4/MIN_TIME.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 214:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_Start(void) 
 216:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 217:.\Generated_Source\PSoC4/MIN_TIME.c ****     if(MIN_TIME_initVar == 0u)
 218:.\Generated_Source\PSoC4/MIN_TIME.c ****     {
 219:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_Init();
 220:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 221:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC4/MIN_TIME.c ****     }
 223:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 224:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_Enable();
 226:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 227:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 228:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 229:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_Stop
 231:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 232:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 233:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 234:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The stop function halts the timer, but does not change any modes or disable
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 6


 235:.\Generated_Source\PSoC4/MIN_TIME.c **** *  interrupts.
 236:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 237:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 238:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 239:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 240:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 241:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 242:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 243:.\Generated_Source\PSoC4/MIN_TIME.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC4/MIN_TIME.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 246:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_Stop(void) 
 248:.\Generated_Source\PSoC4/MIN_TIME.c **** {
  52              		.loc 1 248 0
  53              		.cfi_startproc
 249:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(!MIN_TIME_UDB_CONTROL_REG_REMOVED || MIN_TIME_UsingFixedFunction)
 251:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= ((uint8)(~MIN_TIME_CTRL_ENABLE));
  54              		.loc 1 251 0
  55 0000 024B     		ldr	r3, .L5
  56 0002 1978     		ldrb	r1, [r3]
  57 0004 7F22     		mov	r2, #127
  58 0006 0A40     		and	r2, r1
  59 0008 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 254:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (MIN_TIME_UsingFixedFunction)
 256:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_GLOBAL_ENABLE &= ((uint8)(~MIN_TIME_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_GLOBAL_STBY_ENABLE &= ((uint8)(~MIN_TIME_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC4/MIN_TIME.c **** }
  60              		.loc 1 259 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 71000F40 		.word	1074724977
  67              		.cfi_endproc
  68              	.LFE3:
  69              		.size	MIN_TIME_Stop, .-MIN_TIME_Stop
  70              		.section	.text.MIN_TIME_SetInterruptMode,"ax",%progbits
  71              		.align	2
  72              		.global	MIN_TIME_SetInterruptMode
  73              		.code	16
  74              		.thumb_func
  75              		.type	MIN_TIME_SetInterruptMode, %function
  76              	MIN_TIME_SetInterruptMode:
  77              	.LFB4:
 260:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 261:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 262:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SetInterruptMode
 264:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/MIN_TIME.c **** *
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 7


 266:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 267:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC4/MIN_TIME.c **** *  be selected.
 270:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 271:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 272:.\Generated_Source\PSoC4/MIN_TIME.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC4/MIN_TIME.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 275:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 276:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 277:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 278:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC4/MIN_TIME.c **** {
  78              		.loc 1 280 0
  79              		.cfi_startproc
  80              	.LVL0:
 281:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_STATUS_MASK = interruptMode;
  81              		.loc 1 281 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1870     		strb	r0, [r3]
 282:.\Generated_Source\PSoC4/MIN_TIME.c **** }
  84              		.loc 1 282 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 81000F40 		.word	1074724993
  91              		.cfi_endproc
  92              	.LFE4:
  93              		.size	MIN_TIME_SetInterruptMode, .-MIN_TIME_SetInterruptMode
  94              		.section	.text.MIN_TIME_SoftwareCapture,"ax",%progbits
  95              		.align	2
  96              		.global	MIN_TIME_SoftwareCapture
  97              		.code	16
  98              		.thumb_func
  99              		.type	MIN_TIME_SoftwareCapture, %function
 100              	MIN_TIME_SoftwareCapture:
 101              	.LFB5:
 283:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 284:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 285:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SoftwareCapture
 287:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 289:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 290:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 292:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 293:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 294:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 295:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 296:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 297:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 298:.\Generated_Source\PSoC4/MIN_TIME.c **** * Side Effects:
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 8


 299:.\Generated_Source\PSoC4/MIN_TIME.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 301:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 102              		.loc 1 303 0
 103              		.cfi_startproc
 304:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(MIN_TIME_UsingFixedFunction)
 306:.\Generated_Source\PSoC4/MIN_TIME.c ****         (void)CY_GET_REG16(MIN_TIME_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 308:.\Generated_Source\PSoC4/MIN_TIME.c ****         (void)CY_GET_REG8(MIN_TIME_COUNTER_LSB_PTR_8BIT);
 104              		.loc 1 308 0
 105 0000 014B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif/* (MIN_TIME_UsingFixedFunction) */
 310:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 107              		.loc 1 311 0
 108              		@ sp needed
 109 0004 7047     		bx	lr
 110              	.L12:
 111 0006 C046     		.align	2
 112              	.L11:
 113 0008 00000F40 		.word	1074724864
 114              		.cfi_endproc
 115              	.LFE5:
 116              		.size	MIN_TIME_SoftwareCapture, .-MIN_TIME_SoftwareCapture
 117              		.section	.text.MIN_TIME_ReadStatusRegister,"ax",%progbits
 118              		.align	2
 119              		.global	MIN_TIME_ReadStatusRegister
 120              		.code	16
 121              		.thumb_func
 122              		.type	MIN_TIME_ReadStatusRegister, %function
 123              	MIN_TIME_ReadStatusRegister:
 124              	.LFB6:
 312:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 313:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 314:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadStatusRegister
 316:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 318:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 319:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC4/MIN_TIME.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC4/MIN_TIME.c **** *  be permuteable.
 322:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 323:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 324:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 325:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 326:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 327:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 329:.\Generated_Source\PSoC4/MIN_TIME.c **** * Side Effects:
 330:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 332:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 9


 333:.\Generated_Source\PSoC4/MIN_TIME.c **** uint8   MIN_TIME_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 125              		.loc 1 334 0
 126              		.cfi_startproc
 335:.\Generated_Source\PSoC4/MIN_TIME.c ****     return (MIN_TIME_STATUS);
 127              		.loc 1 335 0
 128 0000 014B     		ldr	r3, .L14
 129 0002 1878     		ldrb	r0, [r3]
 130 0004 C0B2     		uxtb	r0, r0
 336:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 0006 7047     		bx	lr
 134              	.L15:
 135              		.align	2
 136              	.L14:
 137 0008 61000F40 		.word	1074724961
 138              		.cfi_endproc
 139              	.LFE6:
 140              		.size	MIN_TIME_ReadStatusRegister, .-MIN_TIME_ReadStatusRegister
 141              		.section	.text.MIN_TIME_ReadControlRegister,"ax",%progbits
 142              		.align	2
 143              		.global	MIN_TIME_ReadControlRegister
 144              		.code	16
 145              		.thumb_func
 146              		.type	MIN_TIME_ReadControlRegister, %function
 147              	MIN_TIME_ReadControlRegister:
 148              	.LFB7:
 337:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 338:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 339:.\Generated_Source\PSoC4/MIN_TIME.c **** #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 341:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 342:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadControlRegister
 344:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 345:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 346:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 347:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 349:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 350:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 351:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 352:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 353:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 355:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC4/MIN_TIME.c **** uint8 MIN_TIME_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 149              		.loc 1 357 0
 150              		.cfi_startproc
 358:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC4/MIN_TIME.c ****         return ((uint8)MIN_TIME_CONTROL);
 151              		.loc 1 359 0
 152 0000 014B     		ldr	r3, .L17
 153 0002 1878     		ldrb	r0, [r3]
 154 0004 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 10


 360:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 361:.\Generated_Source\PSoC4/MIN_TIME.c ****         return (0);
 362:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* (!MIN_TIME_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 155              		.loc 1 363 0
 156              		@ sp needed
 157 0006 7047     		bx	lr
 158              	.L18:
 159              		.align	2
 160              	.L17:
 161 0008 71000F40 		.word	1074724977
 162              		.cfi_endproc
 163              	.LFE7:
 164              		.size	MIN_TIME_ReadControlRegister, .-MIN_TIME_ReadControlRegister
 165              		.section	.text.MIN_TIME_WriteControlRegister,"ax",%progbits
 166              		.align	2
 167              		.global	MIN_TIME_WriteControlRegister
 168              		.code	16
 169              		.thumb_func
 170              		.type	MIN_TIME_WriteControlRegister, %function
 171              	MIN_TIME_WriteControlRegister:
 172              	.LFB8:
 364:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 365:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 366:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_WriteControlRegister
 368:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 369:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 370:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 371:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 373:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 374:.\Generated_Source\PSoC4/MIN_TIME.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 376:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 377:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 378:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 173              		.loc 1 380 0
 174              		.cfi_startproc
 175              	.LVL1:
 381:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL = control;
 176              		.loc 1 382 0
 177 0000 014B     		ldr	r3, .L20
 178 0002 1870     		strb	r0, [r3]
 383:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 384:.\Generated_Source\PSoC4/MIN_TIME.c ****         control = 0u;
 385:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* (!MIN_TIME_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 179              		.loc 1 386 0
 180              		@ sp needed
 181 0004 7047     		bx	lr
 182              	.L21:
 183 0006 C046     		.align	2
 184              	.L20:
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 11


 185 0008 71000F40 		.word	1074724977
 186              		.cfi_endproc
 187              	.LFE8:
 188              		.size	MIN_TIME_WriteControlRegister, .-MIN_TIME_WriteControlRegister
 189              		.section	.text.MIN_TIME_ReadPeriod,"ax",%progbits
 190              		.align	2
 191              		.global	MIN_TIME_ReadPeriod
 192              		.code	16
 193              		.thumb_func
 194              		.type	MIN_TIME_ReadPeriod, %function
 195              	MIN_TIME_ReadPeriod:
 196              	.LFB9:
 387:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 388:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 390:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 391:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadPeriod
 393:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 394:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 395:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 396:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 398:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 399:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 400:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 401:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 402:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 404:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC4/MIN_TIME.c **** uint16 MIN_TIME_ReadPeriod(void) 
 406:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 197              		.loc 1 406 0
 198              		.cfi_startproc
 407:.\Generated_Source\PSoC4/MIN_TIME.c ****    #if(MIN_TIME_UsingFixedFunction)
 408:.\Generated_Source\PSoC4/MIN_TIME.c ****        return ((uint16)CY_GET_REG16(MIN_TIME_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC4/MIN_TIME.c ****    #else
 410:.\Generated_Source\PSoC4/MIN_TIME.c ****        return (CY_GET_REG16(MIN_TIME_PERIOD_LSB_PTR));
 199              		.loc 1 410 0
 200 0000 014B     		ldr	r3, .L23
 201 0002 1888     		ldrh	r0, [r3]
 202 0004 80B2     		uxth	r0, r0
 411:.\Generated_Source\PSoC4/MIN_TIME.c ****    #endif /* (MIN_TIME_UsingFixedFunction) */
 412:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 203              		.loc 1 412 0
 204              		@ sp needed
 205 0006 7047     		bx	lr
 206              	.L24:
 207              		.align	2
 208              	.L23:
 209 0008 40100F40 		.word	1074729024
 210              		.cfi_endproc
 211              	.LFE9:
 212              		.size	MIN_TIME_ReadPeriod, .-MIN_TIME_ReadPeriod
 213              		.section	.text.MIN_TIME_WritePeriod,"ax",%progbits
 214              		.align	2
 215              		.global	MIN_TIME_WritePeriod
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 12


 216              		.code	16
 217              		.thumb_func
 218              		.type	MIN_TIME_WritePeriod, %function
 219              	MIN_TIME_WritePeriod:
 220              	.LFB10:
 413:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 414:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 415:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_WritePeriod
 417:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 418:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 419:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 420:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC4/MIN_TIME.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 423:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 424:.\Generated_Source\PSoC4/MIN_TIME.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC4/MIN_TIME.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 427:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 428:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 429:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 430:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_WritePeriod(uint16 period) 
 432:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 221              		.loc 1 432 0
 222              		.cfi_startproc
 223              	.LVL2:
 433:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(MIN_TIME_UsingFixedFunction)
 434:.\Generated_Source\PSoC4/MIN_TIME.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC4/MIN_TIME.c ****         CY_SET_REG16(MIN_TIME_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 437:.\Generated_Source\PSoC4/MIN_TIME.c ****         CY_SET_REG16(MIN_TIME_PERIOD_LSB_PTR, period);
 224              		.loc 1 437 0
 225 0000 014B     		ldr	r3, .L26
 226 0002 1880     		strh	r0, [r3]
 438:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 227              		.loc 1 439 0
 228              		@ sp needed
 229 0004 7047     		bx	lr
 230              	.L27:
 231 0006 C046     		.align	2
 232              	.L26:
 233 0008 40100F40 		.word	1074729024
 234              		.cfi_endproc
 235              	.LFE10:
 236              		.size	MIN_TIME_WritePeriod, .-MIN_TIME_WritePeriod
 237              		.section	.text.MIN_TIME_ReadCapture,"ax",%progbits
 238              		.align	2
 239              		.global	MIN_TIME_ReadCapture
 240              		.code	16
 241              		.thumb_func
 242              		.type	MIN_TIME_ReadCapture, %function
 243              	MIN_TIME_ReadCapture:
 244              	.LFB11:
 440:.\Generated_Source\PSoC4/MIN_TIME.c **** 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 13


 441:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 442:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadCapture
 444:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 445:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 446:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 447:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 449:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 450:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 451:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 452:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 453:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 455:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/MIN_TIME.c **** uint16 MIN_TIME_ReadCapture(void) 
 457:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 245              		.loc 1 457 0
 246              		.cfi_startproc
 458:.\Generated_Source\PSoC4/MIN_TIME.c ****    #if(MIN_TIME_UsingFixedFunction)
 459:.\Generated_Source\PSoC4/MIN_TIME.c ****        return ((uint16)CY_GET_REG16(MIN_TIME_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC4/MIN_TIME.c ****    #else
 461:.\Generated_Source\PSoC4/MIN_TIME.c ****        return (CY_GET_REG16(MIN_TIME_CAPTURE_LSB_PTR));
 247              		.loc 1 461 0
 248 0000 014B     		ldr	r3, .L29
 249 0002 1888     		ldrh	r0, [r3]
 250 0004 80B2     		uxth	r0, r0
 462:.\Generated_Source\PSoC4/MIN_TIME.c ****    #endif /* (MIN_TIME_UsingFixedFunction) */
 463:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 251              		.loc 1 463 0
 252              		@ sp needed
 253 0006 7047     		bx	lr
 254              	.L30:
 255              		.align	2
 256              	.L29:
 257 0008 80100F40 		.word	1074729088
 258              		.cfi_endproc
 259              	.LFE11:
 260              		.size	MIN_TIME_ReadCapture, .-MIN_TIME_ReadCapture
 261              		.section	.text.MIN_TIME_WriteCounter,"ax",%progbits
 262              		.align	2
 263              		.global	MIN_TIME_WriteCounter
 264              		.code	16
 265              		.thumb_func
 266              		.type	MIN_TIME_WriteCounter, %function
 267              	MIN_TIME_WriteCounter:
 268              	.LFB12:
 464:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 465:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 466:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_WriteCounter
 468:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 470:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 471:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 473:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 14


 474:.\Generated_Source\PSoC4/MIN_TIME.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 476:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 477:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 478:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 479:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 269              		.loc 1 481 0
 270              		.cfi_startproc
 271              	.LVL3:
 482:.\Generated_Source\PSoC4/MIN_TIME.c ****    #if(MIN_TIME_UsingFixedFunction)
 483:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC4/MIN_TIME.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC4/MIN_TIME.c ****          */
 486:.\Generated_Source\PSoC4/MIN_TIME.c ****         CY_SET_REG16(MIN_TIME_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC4/MIN_TIME.c ****         
 488:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 489:.\Generated_Source\PSoC4/MIN_TIME.c ****         CY_SET_REG16(MIN_TIME_COUNTER_LSB_PTR, counter);
 272              		.loc 1 489 0
 273 0000 014B     		ldr	r3, .L32
 274 0002 1880     		strh	r0, [r3]
 490:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 275              		.loc 1 491 0
 276              		@ sp needed
 277 0004 7047     		bx	lr
 278              	.L33:
 279 0006 C046     		.align	2
 280              	.L32:
 281 0008 00100F40 		.word	1074728960
 282              		.cfi_endproc
 283              	.LFE12:
 284              		.size	MIN_TIME_WriteCounter, .-MIN_TIME_WriteCounter
 285              		.section	.text.MIN_TIME_ReadCounter,"ax",%progbits
 286              		.align	2
 287              		.global	MIN_TIME_ReadCounter
 288              		.code	16
 289              		.thumb_func
 290              		.type	MIN_TIME_ReadCounter, %function
 291              	MIN_TIME_ReadCounter:
 292              	.LFB13:
 492:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 493:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 494:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadCounter
 496:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 497:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 498:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 499:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 501:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 502:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 503:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 504:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 505:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Present compare value.
 506:.\Generated_Source\PSoC4/MIN_TIME.c **** *
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 15


 507:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC4/MIN_TIME.c **** uint16 MIN_TIME_ReadCounter(void) 
 509:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 293              		.loc 1 509 0
 294              		.cfi_startproc
 510:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(MIN_TIME_UsingFixedFunction)
 514:.\Generated_Source\PSoC4/MIN_TIME.c ****         (void)CY_GET_REG16(MIN_TIME_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 516:.\Generated_Source\PSoC4/MIN_TIME.c ****         (void)CY_GET_REG8(MIN_TIME_COUNTER_LSB_PTR_8BIT);
 295              		.loc 1 516 0
 296 0000 024B     		ldr	r3, .L35
 297 0002 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif/* (MIN_TIME_UsingFixedFunction) */
 518:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 519:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if(MIN_TIME_UsingFixedFunction)
 521:.\Generated_Source\PSoC4/MIN_TIME.c ****         return ((uint16)CY_GET_REG16(MIN_TIME_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC4/MIN_TIME.c ****     #else
 523:.\Generated_Source\PSoC4/MIN_TIME.c ****         return (CY_GET_REG16(MIN_TIME_CAPTURE_LSB_PTR));
 298              		.loc 1 523 0
 299 0004 024B     		ldr	r3, .L35+4
 300 0006 1888     		ldrh	r0, [r3]
 301 0008 80B2     		uxth	r0, r0
 524:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* (MIN_TIME_UsingFixedFunction) */
 525:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 302              		.loc 1 525 0
 303              		@ sp needed
 304 000a 7047     		bx	lr
 305              	.L36:
 306              		.align	2
 307              	.L35:
 308 000c 00000F40 		.word	1074724864
 309 0010 80100F40 		.word	1074729088
 310              		.cfi_endproc
 311              	.LFE13:
 312              		.size	MIN_TIME_ReadCounter, .-MIN_TIME_ReadCounter
 313              		.section	.text.MIN_TIME_ClearFIFO,"ax",%progbits
 314              		.align	2
 315              		.global	MIN_TIME_ClearFIFO
 316              		.code	16
 317              		.thumb_func
 318              		.type	MIN_TIME_ClearFIFO, %function
 319              	MIN_TIME_ClearFIFO:
 320              	.LFB14:
 526:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 527:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 528:.\Generated_Source\PSoC4/MIN_TIME.c **** #if(!MIN_TIME_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 530:.\Generated_Source\PSoC4/MIN_TIME.c ****     
 531:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC4/MIN_TIME.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC4/MIN_TIME.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC4/MIN_TIME.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC4/MIN_TIME.c **** 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 16


 536:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 537:.\Generated_Source\PSoC4/MIN_TIME.c **** #if (MIN_TIME_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 539:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 540:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SetCaptureMode
 542:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 543:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 544:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 545:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 547:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 548:.\Generated_Source\PSoC4/MIN_TIME.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC4/MIN_TIME.c **** *  #define MIN_TIME__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC4/MIN_TIME.c **** #define MIN_TIME__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC4/MIN_TIME.c **** #define MIN_TIME__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC4/MIN_TIME.c **** #define MIN_TIME__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC4/MIN_TIME.c **** #define MIN_TIME__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC4/MIN_TIME.c ****  identifiers
 556:.\Generated_Source\PSoC4/MIN_TIME.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC4/MIN_TIME.c **** *  MIN_TIME__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC4/MIN_TIME.c **** *  MIN_TIME__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC4/MIN_TIME.c **** *  MIN_TIME__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC4/MIN_TIME.c **** *  MIN_TIME__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 562:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 563:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 564:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 565:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 568:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC4/MIN_TIME.c ****     captureMode = ((uint8)((uint8)captureMode << MIN_TIME_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC4/MIN_TIME.c ****     captureMode &= (MIN_TIME_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 572:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= ((uint8)(~MIN_TIME_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 576:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* (!MIN_TIME_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 580:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 582:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 583:.\Generated_Source\PSoC4/MIN_TIME.c **** #if (MIN_TIME_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 585:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 586:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SetTriggerMode
 588:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 589:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 590:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 591:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC4/MIN_TIME.c **** *
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 17


 593:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 594:.\Generated_Source\PSoC4/MIN_TIME.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC4/MIN_TIME.c ****     #define MIN_TIME__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC4/MIN_TIME.c ****     #define MIN_TIME__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC4/MIN_TIME.c ****     #define MIN_TIME__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC4/MIN_TIME.c ****     #define MIN_TIME__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC4/MIN_TIME.c ****     #define MIN_TIME__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 601:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 602:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 603:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 604:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 607:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC4/MIN_TIME.c ****     triggerMode &= MIN_TIME_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 610:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 611:.\Generated_Source\PSoC4/MIN_TIME.c ****     
 612:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= ((uint8)(~MIN_TIME_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 615:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL |= (triggerMode | MIN_TIME__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 619:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 621:.\Generated_Source\PSoC4/MIN_TIME.c **** #if (MIN_TIME_EnableTriggerMode)
 622:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 623:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 624:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_EnableTrigger
 626:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 627:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 628:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 629:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 631:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 632:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 633:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 634:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 635:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 636:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 637:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_EnableTrigger(void) 
 639:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 640:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 641:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL |= MIN_TIME_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 644:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 645:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 646:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_DisableTrigger
 648:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 649:.\Generated_Source\PSoC4/MIN_TIME.c **** *
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 18


 650:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 651:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 653:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 654:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 655:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 656:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 657:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 658:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 659:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_DisableTrigger(void) 
 661:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 662:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed 
 663:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= ((uint8)(~MIN_TIME_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 666:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 668:.\Generated_Source\PSoC4/MIN_TIME.c **** #if(MIN_TIME_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 670:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 671:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SetInterruptCount
 673:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 675:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 676:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 678:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 679:.\Generated_Source\PSoC4/MIN_TIME.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC4/MIN_TIME.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC4/MIN_TIME.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC4/MIN_TIME.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 684:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 685:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 686:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 687:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 690:.\Generated_Source\PSoC4/MIN_TIME.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC4/MIN_TIME.c ****     interruptCount &= MIN_TIME_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 693:.\Generated_Source\PSoC4/MIN_TIME.c ****     #if (!MIN_TIME_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL &= ((uint8)(~MIN_TIME_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC4/MIN_TIME.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC4/MIN_TIME.c ****     #endif /* (!MIN_TIME_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 700:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* MIN_TIME_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 702:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 703:.\Generated_Source\PSoC4/MIN_TIME.c **** #if (MIN_TIME_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 705:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 706:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 19


 707:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_SetCaptureCount
 708:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 709:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 710:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 711:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 713:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 714:.\Generated_Source\PSoC4/MIN_TIME.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC4/MIN_TIME.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC4/MIN_TIME.c **** *                captures.
 717:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 718:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 719:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 720:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 721:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 724:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 726:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 727:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 728:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ReadCaptureCount
 730:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 731:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 732:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 733:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 735:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 736:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 737:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 738:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 739:.\Generated_Source\PSoC4/MIN_TIME.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 741:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC4/MIN_TIME.c **** uint8 MIN_TIME_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 744:.\Generated_Source\PSoC4/MIN_TIME.c ****     return ((uint8)MIN_TIME_CAP_COUNT);
 745:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 746:.\Generated_Source\PSoC4/MIN_TIME.c **** #endif /* MIN_TIME_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 748:.\Generated_Source\PSoC4/MIN_TIME.c **** 
 749:.\Generated_Source\PSoC4/MIN_TIME.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC4/MIN_TIME.c **** * Function Name: MIN_TIME_ClearFIFO
 751:.\Generated_Source\PSoC4/MIN_TIME.c **** ********************************************************************************
 752:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 753:.\Generated_Source\PSoC4/MIN_TIME.c **** * Summary:
 754:.\Generated_Source\PSoC4/MIN_TIME.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 756:.\Generated_Source\PSoC4/MIN_TIME.c **** * Parameters:
 757:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 758:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 759:.\Generated_Source\PSoC4/MIN_TIME.c **** * Return:
 760:.\Generated_Source\PSoC4/MIN_TIME.c **** *  void
 761:.\Generated_Source\PSoC4/MIN_TIME.c **** *
 762:.\Generated_Source\PSoC4/MIN_TIME.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC4/MIN_TIME.c **** void MIN_TIME_ClearFIFO(void) 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 20


 764:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 321              		.loc 1 764 0
 322              		.cfi_startproc
 323 0000 10B5     		push	{r4, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC4/MIN_TIME.c ****     while(0u != (MIN_TIME_ReadStatusRegister() & MIN_TIME_STATUS_FIFONEMP))
 327              		.loc 1 765 0
 328 0002 0824     		mov	r4, #8
 329 0004 01E0     		b	.L38
 330              	.L39:
 766:.\Generated_Source\PSoC4/MIN_TIME.c ****     {
 767:.\Generated_Source\PSoC4/MIN_TIME.c ****         (void)MIN_TIME_ReadCapture();
 331              		.loc 1 767 0
 332 0006 FFF7FEFF 		bl	MIN_TIME_ReadCapture
 333              	.LVL4:
 334              	.L38:
 765:.\Generated_Source\PSoC4/MIN_TIME.c ****     while(0u != (MIN_TIME_ReadStatusRegister() & MIN_TIME_STATUS_FIFONEMP))
 335              		.loc 1 765 0 discriminator 1
 336 000a FFF7FEFF 		bl	MIN_TIME_ReadStatusRegister
 337              	.LVL5:
 338 000e 0442     		tst	r4, r0
 339 0010 F9D1     		bne	.L39
 768:.\Generated_Source\PSoC4/MIN_TIME.c ****     }
 769:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 340              		.loc 1 769 0
 341              		@ sp needed
 342 0012 10BD     		pop	{r4, pc}
 343              		.cfi_endproc
 344              	.LFE14:
 345              		.size	MIN_TIME_ClearFIFO, .-MIN_TIME_ClearFIFO
 346              		.section	.text.MIN_TIME_Init,"ax",%progbits
 347              		.align	2
 348              		.global	MIN_TIME_Init
 349              		.code	16
 350              		.thumb_func
 351              		.type	MIN_TIME_Init, %function
 352              	MIN_TIME_Init:
 353              	.LFB0:
  44:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 354              		.loc 1 44 0
 355              		.cfi_startproc
 356 0000 10B5     		push	{r4, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 4, -8
 359              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_WritePeriod(MIN_TIME_INIT_PERIOD);
 360              		.loc 1 118 0
 361 0002 0B4C     		ldr	r4, .L41
 362 0004 201C     		mov	r0, r4
 363 0006 FFF7FEFF 		bl	MIN_TIME_WritePeriod
 364              	.LVL6:
 119:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_WriteCounter(MIN_TIME_INIT_PERIOD);
 365              		.loc 1 119 0
 366 000a 201C     		mov	r0, r4
 367 000c FFF7FEFF 		bl	MIN_TIME_WriteCounter
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 21


 368              	.LVL7:
 142:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_interruptState = CyEnterCriticalSection();
 369              		.loc 1 142 0
 370 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 371              	.LVL8:
 145:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_STATUS_AUX_CTRL |= MIN_TIME_STATUS_ACTL_INT_EN_MASK;
 372              		.loc 1 145 0
 373 0014 074B     		ldr	r3, .L41+4
 374 0016 1978     		ldrb	r1, [r3]
 375 0018 1022     		mov	r2, #16
 376 001a 0A43     		orr	r2, r1
 377 001c 1A70     		strb	r2, [r3]
 148:.\Generated_Source\PSoC4/MIN_TIME.c ****         CyExitCriticalSection(MIN_TIME_interruptState);
 378              		.loc 1 148 0
 379 001e FFF7FEFF 		bl	CyExitCriticalSection
 380              	.LVL9:
 159:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_ClearFIFO();
 381              		.loc 1 159 0
 382 0022 FFF7FEFF 		bl	MIN_TIME_ClearFIFO
 383              	.LVL10:
 162:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_SetInterruptMode(MIN_TIME_INIT_INTERRUPT_MODE);
 384              		.loc 1 162 0
 385 0026 0420     		mov	r0, #4
 386 0028 FFF7FEFF 		bl	MIN_TIME_SetInterruptMode
 387              	.LVL11:
 163:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 388              		.loc 1 163 0
 389              		@ sp needed
 390 002c 10BD     		pop	{r4, pc}
 391              	.L42:
 392 002e C046     		.align	2
 393              	.L41:
 394 0030 5FEA0000 		.word	59999
 395 0034 91000F40 		.word	1074725009
 396              		.cfi_endproc
 397              	.LFE0:
 398              		.size	MIN_TIME_Init, .-MIN_TIME_Init
 399              		.section	.text.MIN_TIME_Start,"ax",%progbits
 400              		.align	2
 401              		.global	MIN_TIME_Start
 402              		.code	16
 403              		.thumb_func
 404              		.type	MIN_TIME_Start, %function
 405              	MIN_TIME_Start:
 406              	.LFB2:
 216:.\Generated_Source\PSoC4/MIN_TIME.c **** {
 407              		.loc 1 216 0
 408              		.cfi_startproc
 409 0000 08B5     		push	{r3, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC4/MIN_TIME.c ****     if(MIN_TIME_initVar == 0u)
 413              		.loc 1 217 0
 414 0002 064B     		ldr	r3, .L45
 415 0004 1B78     		ldrb	r3, [r3]
 416 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 22


 417 0008 04D1     		bne	.L44
 219:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_Init();
 418              		.loc 1 219 0
 419 000a FFF7FEFF 		bl	MIN_TIME_Init
 420              	.LVL12:
 221:.\Generated_Source\PSoC4/MIN_TIME.c ****         MIN_TIME_initVar = 1u;   /* Clear this bit for Initialization */
 421              		.loc 1 221 0
 422 000e 0122     		mov	r2, #1
 423 0010 024B     		ldr	r3, .L45
 424 0012 1A70     		strb	r2, [r3]
 425              	.L44:
 225:.\Generated_Source\PSoC4/MIN_TIME.c ****     MIN_TIME_Enable();
 426              		.loc 1 225 0
 427 0014 FFF7FEFF 		bl	MIN_TIME_Enable
 428              	.LVL13:
 226:.\Generated_Source\PSoC4/MIN_TIME.c **** }
 429              		.loc 1 226 0
 430              		@ sp needed
 431 0018 08BD     		pop	{r3, pc}
 432              	.L46:
 433 001a C046     		.align	2
 434              	.L45:
 435 001c 00000000 		.word	.LANCHOR0
 436              		.cfi_endproc
 437              	.LFE2:
 438              		.size	MIN_TIME_Start, .-MIN_TIME_Start
 439              		.global	MIN_TIME_initVar
 440              		.bss
 441              		.set	.LANCHOR0,. + 0
 442              		.type	MIN_TIME_initVar, %object
 443              		.size	MIN_TIME_initVar, 1
 444              	MIN_TIME_initVar:
 445 0000 00       		.space	1
 446              		.text
 447              	.Letext0:
 448              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 449              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 450              		.section	.debug_info,"",%progbits
 451              	.Ldebug_info0:
 452 0000 E3020000 		.4byte	0x2e3
 453 0004 0400     		.2byte	0x4
 454 0006 00000000 		.4byte	.Ldebug_abbrev0
 455 000a 04       		.byte	0x4
 456 000b 01       		.uleb128 0x1
 457 000c EC010000 		.4byte	.LASF36
 458 0010 01       		.byte	0x1
 459 0011 85000000 		.4byte	.LASF37
 460 0015 39010000 		.4byte	.LASF38
 461 0019 00000000 		.4byte	.Ldebug_ranges0+0
 462 001d 00000000 		.4byte	0
 463 0021 00000000 		.4byte	.Ldebug_line0
 464 0025 02       		.uleb128 0x2
 465 0026 01       		.byte	0x1
 466 0027 06       		.byte	0x6
 467 0028 12030000 		.4byte	.LASF0
 468 002c 02       		.uleb128 0x2
 469 002d 01       		.byte	0x1
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 23


 470 002e 08       		.byte	0x8
 471 002f E8000000 		.4byte	.LASF1
 472 0033 02       		.uleb128 0x2
 473 0034 02       		.byte	0x2
 474 0035 05       		.byte	0x5
 475 0036 FA020000 		.4byte	.LASF2
 476 003a 02       		.uleb128 0x2
 477 003b 02       		.byte	0x2
 478 003c 07       		.byte	0x7
 479 003d 31000000 		.4byte	.LASF3
 480 0041 02       		.uleb128 0x2
 481 0042 04       		.byte	0x4
 482 0043 05       		.byte	0x5
 483 0044 04030000 		.4byte	.LASF4
 484 0048 02       		.uleb128 0x2
 485 0049 04       		.byte	0x4
 486 004a 07       		.byte	0x7
 487 004b 19010000 		.4byte	.LASF5
 488 004f 02       		.uleb128 0x2
 489 0050 08       		.byte	0x8
 490 0051 05       		.byte	0x5
 491 0052 B1020000 		.4byte	.LASF6
 492 0056 02       		.uleb128 0x2
 493 0057 08       		.byte	0x8
 494 0058 07       		.byte	0x7
 495 0059 D1000000 		.4byte	.LASF7
 496 005d 03       		.uleb128 0x3
 497 005e 04       		.byte	0x4
 498 005f 05       		.byte	0x5
 499 0060 696E7400 		.ascii	"int\000"
 500 0064 02       		.uleb128 0x2
 501 0065 04       		.byte	0x4
 502 0066 07       		.byte	0x7
 503 0067 B8010000 		.4byte	.LASF8
 504 006b 04       		.uleb128 0x4
 505 006c 2B010000 		.4byte	.LASF9
 506 0070 02       		.byte	0x2
 507 0071 C1       		.byte	0xc1
 508 0072 2C000000 		.4byte	0x2c
 509 0076 04       		.uleb128 0x4
 510 0077 9A010000 		.4byte	.LASF10
 511 007b 02       		.byte	0x2
 512 007c C2       		.byte	0xc2
 513 007d 3A000000 		.4byte	0x3a
 514 0081 02       		.uleb128 0x2
 515 0082 04       		.byte	0x4
 516 0083 04       		.byte	0x4
 517 0084 C3000000 		.4byte	.LASF11
 518 0088 02       		.uleb128 0x2
 519 0089 08       		.byte	0x8
 520 008a 04       		.byte	0x4
 521 008b 76010000 		.4byte	.LASF12
 522 008f 02       		.uleb128 0x2
 523 0090 01       		.byte	0x1
 524 0091 08       		.byte	0x8
 525 0092 0D030000 		.4byte	.LASF13
 526 0096 05       		.uleb128 0x5
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 24


 527 0097 8B020000 		.4byte	.LASF14
 528 009b 02       		.byte	0x2
 529 009c 6B01     		.2byte	0x16b
 530 009e A2000000 		.4byte	0xa2
 531 00a2 06       		.uleb128 0x6
 532 00a3 6B000000 		.4byte	0x6b
 533 00a7 05       		.uleb128 0x5
 534 00a8 00000000 		.4byte	.LASF15
 535 00ac 02       		.byte	0x2
 536 00ad 6C01     		.2byte	0x16c
 537 00af B3000000 		.4byte	0xb3
 538 00b3 06       		.uleb128 0x6
 539 00b4 76000000 		.4byte	0x76
 540 00b8 02       		.uleb128 0x2
 541 00b9 04       		.byte	0x4
 542 00ba 07       		.byte	0x7
 543 00bb A8020000 		.4byte	.LASF16
 544 00bf 07       		.uleb128 0x7
 545 00c0 1A000000 		.4byte	.LASF17
 546 00c4 01       		.byte	0x1
 547 00c5 B4       		.byte	0xb4
 548 00c6 00000000 		.4byte	.LFB1
 549 00ca 10000000 		.4byte	.LFE1-.LFB1
 550 00ce 01       		.uleb128 0x1
 551 00cf 9C       		.byte	0x9c
 552 00d0 07       		.uleb128 0x7
 553 00d1 7D020000 		.4byte	.LASF18
 554 00d5 01       		.byte	0x1
 555 00d6 F7       		.byte	0xf7
 556 00d7 00000000 		.4byte	.LFB3
 557 00db 10000000 		.4byte	.LFE3-.LFB3
 558 00df 01       		.uleb128 0x1
 559 00e0 9C       		.byte	0x9c
 560 00e1 08       		.uleb128 0x8
 561 00e2 A9000000 		.4byte	.LASF22
 562 00e6 01       		.byte	0x1
 563 00e7 1701     		.2byte	0x117
 564 00e9 00000000 		.4byte	.LFB4
 565 00ed 0C000000 		.4byte	.LFE4-.LFB4
 566 00f1 01       		.uleb128 0x1
 567 00f2 9C       		.byte	0x9c
 568 00f3 06010000 		.4byte	0x106
 569 00f7 09       		.uleb128 0x9
 570 00f8 BF020000 		.4byte	.LASF24
 571 00fc 01       		.byte	0x1
 572 00fd 1701     		.2byte	0x117
 573 00ff 6B000000 		.4byte	0x6b
 574 0103 01       		.uleb128 0x1
 575 0104 50       		.byte	0x50
 576 0105 00       		.byte	0
 577 0106 0A       		.uleb128 0xa
 578 0107 59000000 		.4byte	.LASF19
 579 010b 01       		.byte	0x1
 580 010c 2E01     		.2byte	0x12e
 581 010e 00000000 		.4byte	.LFB5
 582 0112 0C000000 		.4byte	.LFE5-.LFB5
 583 0116 01       		.uleb128 0x1
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 25


 584 0117 9C       		.byte	0x9c
 585 0118 0B       		.uleb128 0xb
 586 0119 5A010000 		.4byte	.LASF20
 587 011d 01       		.byte	0x1
 588 011e 4D01     		.2byte	0x14d
 589 0120 6B000000 		.4byte	0x6b
 590 0124 00000000 		.4byte	.LFB6
 591 0128 0C000000 		.4byte	.LFE6-.LFB6
 592 012c 01       		.uleb128 0x1
 593 012d 9C       		.byte	0x9c
 594 012e 0B       		.uleb128 0xb
 595 012f 7D010000 		.4byte	.LASF21
 596 0133 01       		.byte	0x1
 597 0134 6401     		.2byte	0x164
 598 0136 6B000000 		.4byte	0x6b
 599 013a 00000000 		.4byte	.LFB7
 600 013e 0C000000 		.4byte	.LFE7-.LFB7
 601 0142 01       		.uleb128 0x1
 602 0143 9C       		.byte	0x9c
 603 0144 08       		.uleb128 0x8
 604 0145 DC020000 		.4byte	.LASF23
 605 0149 01       		.byte	0x1
 606 014a 7B01     		.2byte	0x17b
 607 014c 00000000 		.4byte	.LFB8
 608 0150 0C000000 		.4byte	.LFE8-.LFB8
 609 0154 01       		.uleb128 0x1
 610 0155 9C       		.byte	0x9c
 611 0156 69010000 		.4byte	0x169
 612 015a 09       		.uleb128 0x9
 613 015b 31010000 		.4byte	.LASF25
 614 015f 01       		.byte	0x1
 615 0160 7B01     		.2byte	0x17b
 616 0162 6B000000 		.4byte	0x6b
 617 0166 01       		.uleb128 0x1
 618 0167 50       		.byte	0x50
 619 0168 00       		.byte	0
 620 0169 0B       		.uleb128 0xb
 621 016a 06000000 		.4byte	.LASF26
 622 016e 01       		.byte	0x1
 623 016f 9501     		.2byte	0x195
 624 0171 76000000 		.4byte	0x76
 625 0175 00000000 		.4byte	.LFB9
 626 0179 0C000000 		.4byte	.LFE9-.LFB9
 627 017d 01       		.uleb128 0x1
 628 017e 9C       		.byte	0x9c
 629 017f 08       		.uleb128 0x8
 630 0180 68020000 		.4byte	.LASF27
 631 0184 01       		.byte	0x1
 632 0185 AF01     		.2byte	0x1af
 633 0187 00000000 		.4byte	.LFB10
 634 018b 0C000000 		.4byte	.LFE10-.LFB10
 635 018f 01       		.uleb128 0x1
 636 0190 9C       		.byte	0x9c
 637 0191 A4010000 		.4byte	0x1a4
 638 0195 09       		.uleb128 0x9
 639 0196 2A000000 		.4byte	.LASF28
 640 019a 01       		.byte	0x1
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 26


 641 019b AF01     		.2byte	0x1af
 642 019d 76000000 		.4byte	0x76
 643 01a1 01       		.uleb128 0x1
 644 01a2 50       		.byte	0x50
 645 01a3 00       		.byte	0
 646 01a4 0B       		.uleb128 0xb
 647 01a5 44000000 		.4byte	.LASF29
 648 01a9 01       		.byte	0x1
 649 01aa C801     		.2byte	0x1c8
 650 01ac 76000000 		.4byte	0x76
 651 01b0 00000000 		.4byte	.LFB11
 652 01b4 0C000000 		.4byte	.LFE11-.LFB11
 653 01b8 01       		.uleb128 0x1
 654 01b9 9C       		.byte	0x9c
 655 01ba 08       		.uleb128 0x8
 656 01bb 1E030000 		.4byte	.LASF30
 657 01bf 01       		.byte	0x1
 658 01c0 E001     		.2byte	0x1e0
 659 01c2 00000000 		.4byte	.LFB12
 660 01c6 0C000000 		.4byte	.LFE12-.LFB12
 661 01ca 01       		.uleb128 0x1
 662 01cb 9C       		.byte	0x9c
 663 01cc DF010000 		.4byte	0x1df
 664 01d0 09       		.uleb128 0x9
 665 01d1 C9000000 		.4byte	.LASF31
 666 01d5 01       		.byte	0x1
 667 01d6 E001     		.2byte	0x1e0
 668 01d8 76000000 		.4byte	0x76
 669 01dc 01       		.uleb128 0x1
 670 01dd 50       		.byte	0x50
 671 01de 00       		.byte	0
 672 01df 0B       		.uleb128 0xb
 673 01e0 04010000 		.4byte	.LASF32
 674 01e4 01       		.byte	0x1
 675 01e5 FC01     		.2byte	0x1fc
 676 01e7 76000000 		.4byte	0x76
 677 01eb 00000000 		.4byte	.LFB13
 678 01ef 14000000 		.4byte	.LFE13-.LFB13
 679 01f3 01       		.uleb128 0x1
 680 01f4 9C       		.byte	0x9c
 681 01f5 08       		.uleb128 0x8
 682 01f6 72000000 		.4byte	.LASF33
 683 01fa 01       		.byte	0x1
 684 01fb FB02     		.2byte	0x2fb
 685 01fd 00000000 		.4byte	.LFB14
 686 0201 14000000 		.4byte	.LFE14-.LFB14
 687 0205 01       		.uleb128 0x1
 688 0206 9C       		.byte	0x9c
 689 0207 1E020000 		.4byte	0x21e
 690 020b 0C       		.uleb128 0xc
 691 020c 0A000000 		.4byte	.LVL4
 692 0210 A4010000 		.4byte	0x1a4
 693 0214 0C       		.uleb128 0xc
 694 0215 0E000000 		.4byte	.LVL5
 695 0219 18010000 		.4byte	0x118
 696 021d 00       		.byte	0
 697 021e 0D       		.uleb128 0xd
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 27


 698 021f F6000000 		.4byte	.LASF34
 699 0223 01       		.byte	0x1
 700 0224 2B       		.byte	0x2b
 701 0225 00000000 		.4byte	.LFB0
 702 0229 38000000 		.4byte	.LFE0-.LFB0
 703 022d 01       		.uleb128 0x1
 704 022e 9C       		.byte	0x9c
 705 022f 95020000 		.4byte	0x295
 706 0233 0E       		.uleb128 0xe
 707 0234 90020000 		.4byte	.LASF39
 708 0238 01       		.byte	0x1
 709 0239 2F       		.byte	0x2f
 710 023a 6B000000 		.4byte	0x6b
 711 023e 00000000 		.4byte	.LLST0
 712 0242 0F       		.uleb128 0xf
 713 0243 0A000000 		.4byte	.LVL6
 714 0247 7F010000 		.4byte	0x17f
 715 024b 56020000 		.4byte	0x256
 716 024f 10       		.uleb128 0x10
 717 0250 01       		.uleb128 0x1
 718 0251 50       		.byte	0x50
 719 0252 02       		.uleb128 0x2
 720 0253 74       		.byte	0x74
 721 0254 00       		.sleb128 0
 722 0255 00       		.byte	0
 723 0256 0F       		.uleb128 0xf
 724 0257 10000000 		.4byte	.LVL7
 725 025b BA010000 		.4byte	0x1ba
 726 025f 6A020000 		.4byte	0x26a
 727 0263 10       		.uleb128 0x10
 728 0264 01       		.uleb128 0x1
 729 0265 50       		.byte	0x50
 730 0266 02       		.uleb128 0x2
 731 0267 74       		.byte	0x74
 732 0268 00       		.sleb128 0
 733 0269 00       		.byte	0
 734 026a 0C       		.uleb128 0xc
 735 026b 14000000 		.4byte	.LVL8
 736 026f CE020000 		.4byte	0x2ce
 737 0273 0C       		.uleb128 0xc
 738 0274 22000000 		.4byte	.LVL9
 739 0278 D9020000 		.4byte	0x2d9
 740 027c 0C       		.uleb128 0xc
 741 027d 26000000 		.4byte	.LVL10
 742 0281 F5010000 		.4byte	0x1f5
 743 0285 11       		.uleb128 0x11
 744 0286 2C000000 		.4byte	.LVL11
 745 028a E1000000 		.4byte	0xe1
 746 028e 10       		.uleb128 0x10
 747 028f 01       		.uleb128 0x1
 748 0290 50       		.byte	0x50
 749 0291 01       		.uleb128 0x1
 750 0292 34       		.byte	0x34
 751 0293 00       		.byte	0
 752 0294 00       		.byte	0
 753 0295 0D       		.uleb128 0xd
 754 0296 CD020000 		.4byte	.LASF35
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 28


 755 029a 01       		.byte	0x1
 756 029b D7       		.byte	0xd7
 757 029c 00000000 		.4byte	.LFB2
 758 02a0 20000000 		.4byte	.LFE2-.LFB2
 759 02a4 01       		.uleb128 0x1
 760 02a5 9C       		.byte	0x9c
 761 02a6 BD020000 		.4byte	0x2bd
 762 02aa 0C       		.uleb128 0xc
 763 02ab 0E000000 		.4byte	.LVL12
 764 02af 1E020000 		.4byte	0x21e
 765 02b3 0C       		.uleb128 0xc
 766 02b4 18000000 		.4byte	.LVL13
 767 02b8 BF000000 		.4byte	0xbf
 768 02bc 00       		.byte	0
 769 02bd 12       		.uleb128 0x12
 770 02be DB010000 		.4byte	.LASF40
 771 02c2 01       		.byte	0x1
 772 02c3 1A       		.byte	0x1a
 773 02c4 6B000000 		.4byte	0x6b
 774 02c8 05       		.uleb128 0x5
 775 02c9 03       		.byte	0x3
 776 02ca 00000000 		.4byte	MIN_TIME_initVar
 777 02ce 13       		.uleb128 0x13
 778 02cf A1010000 		.4byte	.LASF41
 779 02d3 03       		.byte	0x3
 780 02d4 5E       		.byte	0x5e
 781 02d5 6B000000 		.4byte	0x6b
 782 02d9 14       		.uleb128 0x14
 783 02da C5010000 		.4byte	.LASF42
 784 02de 03       		.byte	0x3
 785 02df 5F       		.byte	0x5f
 786 02e0 15       		.uleb128 0x15
 787 02e1 6B000000 		.4byte	0x6b
 788 02e5 00       		.byte	0
 789 02e6 00       		.byte	0
 790              		.section	.debug_abbrev,"",%progbits
 791              	.Ldebug_abbrev0:
 792 0000 01       		.uleb128 0x1
 793 0001 11       		.uleb128 0x11
 794 0002 01       		.byte	0x1
 795 0003 25       		.uleb128 0x25
 796 0004 0E       		.uleb128 0xe
 797 0005 13       		.uleb128 0x13
 798 0006 0B       		.uleb128 0xb
 799 0007 03       		.uleb128 0x3
 800 0008 0E       		.uleb128 0xe
 801 0009 1B       		.uleb128 0x1b
 802 000a 0E       		.uleb128 0xe
 803 000b 55       		.uleb128 0x55
 804 000c 17       		.uleb128 0x17
 805 000d 11       		.uleb128 0x11
 806 000e 01       		.uleb128 0x1
 807 000f 10       		.uleb128 0x10
 808 0010 17       		.uleb128 0x17
 809 0011 00       		.byte	0
 810 0012 00       		.byte	0
 811 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 29


 812 0014 24       		.uleb128 0x24
 813 0015 00       		.byte	0
 814 0016 0B       		.uleb128 0xb
 815 0017 0B       		.uleb128 0xb
 816 0018 3E       		.uleb128 0x3e
 817 0019 0B       		.uleb128 0xb
 818 001a 03       		.uleb128 0x3
 819 001b 0E       		.uleb128 0xe
 820 001c 00       		.byte	0
 821 001d 00       		.byte	0
 822 001e 03       		.uleb128 0x3
 823 001f 24       		.uleb128 0x24
 824 0020 00       		.byte	0
 825 0021 0B       		.uleb128 0xb
 826 0022 0B       		.uleb128 0xb
 827 0023 3E       		.uleb128 0x3e
 828 0024 0B       		.uleb128 0xb
 829 0025 03       		.uleb128 0x3
 830 0026 08       		.uleb128 0x8
 831 0027 00       		.byte	0
 832 0028 00       		.byte	0
 833 0029 04       		.uleb128 0x4
 834 002a 16       		.uleb128 0x16
 835 002b 00       		.byte	0
 836 002c 03       		.uleb128 0x3
 837 002d 0E       		.uleb128 0xe
 838 002e 3A       		.uleb128 0x3a
 839 002f 0B       		.uleb128 0xb
 840 0030 3B       		.uleb128 0x3b
 841 0031 0B       		.uleb128 0xb
 842 0032 49       		.uleb128 0x49
 843 0033 13       		.uleb128 0x13
 844 0034 00       		.byte	0
 845 0035 00       		.byte	0
 846 0036 05       		.uleb128 0x5
 847 0037 16       		.uleb128 0x16
 848 0038 00       		.byte	0
 849 0039 03       		.uleb128 0x3
 850 003a 0E       		.uleb128 0xe
 851 003b 3A       		.uleb128 0x3a
 852 003c 0B       		.uleb128 0xb
 853 003d 3B       		.uleb128 0x3b
 854 003e 05       		.uleb128 0x5
 855 003f 49       		.uleb128 0x49
 856 0040 13       		.uleb128 0x13
 857 0041 00       		.byte	0
 858 0042 00       		.byte	0
 859 0043 06       		.uleb128 0x6
 860 0044 35       		.uleb128 0x35
 861 0045 00       		.byte	0
 862 0046 49       		.uleb128 0x49
 863 0047 13       		.uleb128 0x13
 864 0048 00       		.byte	0
 865 0049 00       		.byte	0
 866 004a 07       		.uleb128 0x7
 867 004b 2E       		.uleb128 0x2e
 868 004c 00       		.byte	0
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 30


 869 004d 3F       		.uleb128 0x3f
 870 004e 19       		.uleb128 0x19
 871 004f 03       		.uleb128 0x3
 872 0050 0E       		.uleb128 0xe
 873 0051 3A       		.uleb128 0x3a
 874 0052 0B       		.uleb128 0xb
 875 0053 3B       		.uleb128 0x3b
 876 0054 0B       		.uleb128 0xb
 877 0055 27       		.uleb128 0x27
 878 0056 19       		.uleb128 0x19
 879 0057 11       		.uleb128 0x11
 880 0058 01       		.uleb128 0x1
 881 0059 12       		.uleb128 0x12
 882 005a 06       		.uleb128 0x6
 883 005b 40       		.uleb128 0x40
 884 005c 18       		.uleb128 0x18
 885 005d 9742     		.uleb128 0x2117
 886 005f 19       		.uleb128 0x19
 887 0060 00       		.byte	0
 888 0061 00       		.byte	0
 889 0062 08       		.uleb128 0x8
 890 0063 2E       		.uleb128 0x2e
 891 0064 01       		.byte	0x1
 892 0065 3F       		.uleb128 0x3f
 893 0066 19       		.uleb128 0x19
 894 0067 03       		.uleb128 0x3
 895 0068 0E       		.uleb128 0xe
 896 0069 3A       		.uleb128 0x3a
 897 006a 0B       		.uleb128 0xb
 898 006b 3B       		.uleb128 0x3b
 899 006c 05       		.uleb128 0x5
 900 006d 27       		.uleb128 0x27
 901 006e 19       		.uleb128 0x19
 902 006f 11       		.uleb128 0x11
 903 0070 01       		.uleb128 0x1
 904 0071 12       		.uleb128 0x12
 905 0072 06       		.uleb128 0x6
 906 0073 40       		.uleb128 0x40
 907 0074 18       		.uleb128 0x18
 908 0075 9742     		.uleb128 0x2117
 909 0077 19       		.uleb128 0x19
 910 0078 01       		.uleb128 0x1
 911 0079 13       		.uleb128 0x13
 912 007a 00       		.byte	0
 913 007b 00       		.byte	0
 914 007c 09       		.uleb128 0x9
 915 007d 05       		.uleb128 0x5
 916 007e 00       		.byte	0
 917 007f 03       		.uleb128 0x3
 918 0080 0E       		.uleb128 0xe
 919 0081 3A       		.uleb128 0x3a
 920 0082 0B       		.uleb128 0xb
 921 0083 3B       		.uleb128 0x3b
 922 0084 05       		.uleb128 0x5
 923 0085 49       		.uleb128 0x49
 924 0086 13       		.uleb128 0x13
 925 0087 02       		.uleb128 0x2
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 31


 926 0088 18       		.uleb128 0x18
 927 0089 00       		.byte	0
 928 008a 00       		.byte	0
 929 008b 0A       		.uleb128 0xa
 930 008c 2E       		.uleb128 0x2e
 931 008d 00       		.byte	0
 932 008e 3F       		.uleb128 0x3f
 933 008f 19       		.uleb128 0x19
 934 0090 03       		.uleb128 0x3
 935 0091 0E       		.uleb128 0xe
 936 0092 3A       		.uleb128 0x3a
 937 0093 0B       		.uleb128 0xb
 938 0094 3B       		.uleb128 0x3b
 939 0095 05       		.uleb128 0x5
 940 0096 27       		.uleb128 0x27
 941 0097 19       		.uleb128 0x19
 942 0098 11       		.uleb128 0x11
 943 0099 01       		.uleb128 0x1
 944 009a 12       		.uleb128 0x12
 945 009b 06       		.uleb128 0x6
 946 009c 40       		.uleb128 0x40
 947 009d 18       		.uleb128 0x18
 948 009e 9742     		.uleb128 0x2117
 949 00a0 19       		.uleb128 0x19
 950 00a1 00       		.byte	0
 951 00a2 00       		.byte	0
 952 00a3 0B       		.uleb128 0xb
 953 00a4 2E       		.uleb128 0x2e
 954 00a5 00       		.byte	0
 955 00a6 3F       		.uleb128 0x3f
 956 00a7 19       		.uleb128 0x19
 957 00a8 03       		.uleb128 0x3
 958 00a9 0E       		.uleb128 0xe
 959 00aa 3A       		.uleb128 0x3a
 960 00ab 0B       		.uleb128 0xb
 961 00ac 3B       		.uleb128 0x3b
 962 00ad 05       		.uleb128 0x5
 963 00ae 27       		.uleb128 0x27
 964 00af 19       		.uleb128 0x19
 965 00b0 49       		.uleb128 0x49
 966 00b1 13       		.uleb128 0x13
 967 00b2 11       		.uleb128 0x11
 968 00b3 01       		.uleb128 0x1
 969 00b4 12       		.uleb128 0x12
 970 00b5 06       		.uleb128 0x6
 971 00b6 40       		.uleb128 0x40
 972 00b7 18       		.uleb128 0x18
 973 00b8 9742     		.uleb128 0x2117
 974 00ba 19       		.uleb128 0x19
 975 00bb 00       		.byte	0
 976 00bc 00       		.byte	0
 977 00bd 0C       		.uleb128 0xc
 978 00be 898201   		.uleb128 0x4109
 979 00c1 00       		.byte	0
 980 00c2 11       		.uleb128 0x11
 981 00c3 01       		.uleb128 0x1
 982 00c4 31       		.uleb128 0x31
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 32


 983 00c5 13       		.uleb128 0x13
 984 00c6 00       		.byte	0
 985 00c7 00       		.byte	0
 986 00c8 0D       		.uleb128 0xd
 987 00c9 2E       		.uleb128 0x2e
 988 00ca 01       		.byte	0x1
 989 00cb 3F       		.uleb128 0x3f
 990 00cc 19       		.uleb128 0x19
 991 00cd 03       		.uleb128 0x3
 992 00ce 0E       		.uleb128 0xe
 993 00cf 3A       		.uleb128 0x3a
 994 00d0 0B       		.uleb128 0xb
 995 00d1 3B       		.uleb128 0x3b
 996 00d2 0B       		.uleb128 0xb
 997 00d3 27       		.uleb128 0x27
 998 00d4 19       		.uleb128 0x19
 999 00d5 11       		.uleb128 0x11
 1000 00d6 01       		.uleb128 0x1
 1001 00d7 12       		.uleb128 0x12
 1002 00d8 06       		.uleb128 0x6
 1003 00d9 40       		.uleb128 0x40
 1004 00da 18       		.uleb128 0x18
 1005 00db 9742     		.uleb128 0x2117
 1006 00dd 19       		.uleb128 0x19
 1007 00de 01       		.uleb128 0x1
 1008 00df 13       		.uleb128 0x13
 1009 00e0 00       		.byte	0
 1010 00e1 00       		.byte	0
 1011 00e2 0E       		.uleb128 0xe
 1012 00e3 34       		.uleb128 0x34
 1013 00e4 00       		.byte	0
 1014 00e5 03       		.uleb128 0x3
 1015 00e6 0E       		.uleb128 0xe
 1016 00e7 3A       		.uleb128 0x3a
 1017 00e8 0B       		.uleb128 0xb
 1018 00e9 3B       		.uleb128 0x3b
 1019 00ea 0B       		.uleb128 0xb
 1020 00eb 49       		.uleb128 0x49
 1021 00ec 13       		.uleb128 0x13
 1022 00ed 02       		.uleb128 0x2
 1023 00ee 17       		.uleb128 0x17
 1024 00ef 00       		.byte	0
 1025 00f0 00       		.byte	0
 1026 00f1 0F       		.uleb128 0xf
 1027 00f2 898201   		.uleb128 0x4109
 1028 00f5 01       		.byte	0x1
 1029 00f6 11       		.uleb128 0x11
 1030 00f7 01       		.uleb128 0x1
 1031 00f8 31       		.uleb128 0x31
 1032 00f9 13       		.uleb128 0x13
 1033 00fa 01       		.uleb128 0x1
 1034 00fb 13       		.uleb128 0x13
 1035 00fc 00       		.byte	0
 1036 00fd 00       		.byte	0
 1037 00fe 10       		.uleb128 0x10
 1038 00ff 8A8201   		.uleb128 0x410a
 1039 0102 00       		.byte	0
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 33


 1040 0103 02       		.uleb128 0x2
 1041 0104 18       		.uleb128 0x18
 1042 0105 9142     		.uleb128 0x2111
 1043 0107 18       		.uleb128 0x18
 1044 0108 00       		.byte	0
 1045 0109 00       		.byte	0
 1046 010a 11       		.uleb128 0x11
 1047 010b 898201   		.uleb128 0x4109
 1048 010e 01       		.byte	0x1
 1049 010f 11       		.uleb128 0x11
 1050 0110 01       		.uleb128 0x1
 1051 0111 31       		.uleb128 0x31
 1052 0112 13       		.uleb128 0x13
 1053 0113 00       		.byte	0
 1054 0114 00       		.byte	0
 1055 0115 12       		.uleb128 0x12
 1056 0116 34       		.uleb128 0x34
 1057 0117 00       		.byte	0
 1058 0118 03       		.uleb128 0x3
 1059 0119 0E       		.uleb128 0xe
 1060 011a 3A       		.uleb128 0x3a
 1061 011b 0B       		.uleb128 0xb
 1062 011c 3B       		.uleb128 0x3b
 1063 011d 0B       		.uleb128 0xb
 1064 011e 49       		.uleb128 0x49
 1065 011f 13       		.uleb128 0x13
 1066 0120 3F       		.uleb128 0x3f
 1067 0121 19       		.uleb128 0x19
 1068 0122 02       		.uleb128 0x2
 1069 0123 18       		.uleb128 0x18
 1070 0124 00       		.byte	0
 1071 0125 00       		.byte	0
 1072 0126 13       		.uleb128 0x13
 1073 0127 2E       		.uleb128 0x2e
 1074 0128 00       		.byte	0
 1075 0129 3F       		.uleb128 0x3f
 1076 012a 19       		.uleb128 0x19
 1077 012b 03       		.uleb128 0x3
 1078 012c 0E       		.uleb128 0xe
 1079 012d 3A       		.uleb128 0x3a
 1080 012e 0B       		.uleb128 0xb
 1081 012f 3B       		.uleb128 0x3b
 1082 0130 0B       		.uleb128 0xb
 1083 0131 27       		.uleb128 0x27
 1084 0132 19       		.uleb128 0x19
 1085 0133 49       		.uleb128 0x49
 1086 0134 13       		.uleb128 0x13
 1087 0135 3C       		.uleb128 0x3c
 1088 0136 19       		.uleb128 0x19
 1089 0137 00       		.byte	0
 1090 0138 00       		.byte	0
 1091 0139 14       		.uleb128 0x14
 1092 013a 2E       		.uleb128 0x2e
 1093 013b 01       		.byte	0x1
 1094 013c 3F       		.uleb128 0x3f
 1095 013d 19       		.uleb128 0x19
 1096 013e 03       		.uleb128 0x3
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 34


 1097 013f 0E       		.uleb128 0xe
 1098 0140 3A       		.uleb128 0x3a
 1099 0141 0B       		.uleb128 0xb
 1100 0142 3B       		.uleb128 0x3b
 1101 0143 0B       		.uleb128 0xb
 1102 0144 27       		.uleb128 0x27
 1103 0145 19       		.uleb128 0x19
 1104 0146 3C       		.uleb128 0x3c
 1105 0147 19       		.uleb128 0x19
 1106 0148 00       		.byte	0
 1107 0149 00       		.byte	0
 1108 014a 15       		.uleb128 0x15
 1109 014b 05       		.uleb128 0x5
 1110 014c 00       		.byte	0
 1111 014d 49       		.uleb128 0x49
 1112 014e 13       		.uleb128 0x13
 1113 014f 00       		.byte	0
 1114 0150 00       		.byte	0
 1115 0151 00       		.byte	0
 1116              		.section	.debug_loc,"",%progbits
 1117              	.Ldebug_loc0:
 1118              	.LLST0:
 1119 0000 14000000 		.4byte	.LVL8
 1120 0004 21000000 		.4byte	.LVL9-1
 1121 0008 0100     		.2byte	0x1
 1122 000a 50       		.byte	0x50
 1123 000b 00000000 		.4byte	0
 1124 000f 00000000 		.4byte	0
 1125              		.section	.debug_aranges,"",%progbits
 1126 0000 8C000000 		.4byte	0x8c
 1127 0004 0200     		.2byte	0x2
 1128 0006 00000000 		.4byte	.Ldebug_info0
 1129 000a 04       		.byte	0x4
 1130 000b 00       		.byte	0
 1131 000c 0000     		.2byte	0
 1132 000e 0000     		.2byte	0
 1133 0010 00000000 		.4byte	.LFB1
 1134 0014 10000000 		.4byte	.LFE1-.LFB1
 1135 0018 00000000 		.4byte	.LFB3
 1136 001c 10000000 		.4byte	.LFE3-.LFB3
 1137 0020 00000000 		.4byte	.LFB4
 1138 0024 0C000000 		.4byte	.LFE4-.LFB4
 1139 0028 00000000 		.4byte	.LFB5
 1140 002c 0C000000 		.4byte	.LFE5-.LFB5
 1141 0030 00000000 		.4byte	.LFB6
 1142 0034 0C000000 		.4byte	.LFE6-.LFB6
 1143 0038 00000000 		.4byte	.LFB7
 1144 003c 0C000000 		.4byte	.LFE7-.LFB7
 1145 0040 00000000 		.4byte	.LFB8
 1146 0044 0C000000 		.4byte	.LFE8-.LFB8
 1147 0048 00000000 		.4byte	.LFB9
 1148 004c 0C000000 		.4byte	.LFE9-.LFB9
 1149 0050 00000000 		.4byte	.LFB10
 1150 0054 0C000000 		.4byte	.LFE10-.LFB10
 1151 0058 00000000 		.4byte	.LFB11
 1152 005c 0C000000 		.4byte	.LFE11-.LFB11
 1153 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 35


 1154 0064 0C000000 		.4byte	.LFE12-.LFB12
 1155 0068 00000000 		.4byte	.LFB13
 1156 006c 14000000 		.4byte	.LFE13-.LFB13
 1157 0070 00000000 		.4byte	.LFB14
 1158 0074 14000000 		.4byte	.LFE14-.LFB14
 1159 0078 00000000 		.4byte	.LFB0
 1160 007c 38000000 		.4byte	.LFE0-.LFB0
 1161 0080 00000000 		.4byte	.LFB2
 1162 0084 20000000 		.4byte	.LFE2-.LFB2
 1163 0088 00000000 		.4byte	0
 1164 008c 00000000 		.4byte	0
 1165              		.section	.debug_ranges,"",%progbits
 1166              	.Ldebug_ranges0:
 1167 0000 00000000 		.4byte	.LFB1
 1168 0004 10000000 		.4byte	.LFE1
 1169 0008 00000000 		.4byte	.LFB3
 1170 000c 10000000 		.4byte	.LFE3
 1171 0010 00000000 		.4byte	.LFB4
 1172 0014 0C000000 		.4byte	.LFE4
 1173 0018 00000000 		.4byte	.LFB5
 1174 001c 0C000000 		.4byte	.LFE5
 1175 0020 00000000 		.4byte	.LFB6
 1176 0024 0C000000 		.4byte	.LFE6
 1177 0028 00000000 		.4byte	.LFB7
 1178 002c 0C000000 		.4byte	.LFE7
 1179 0030 00000000 		.4byte	.LFB8
 1180 0034 0C000000 		.4byte	.LFE8
 1181 0038 00000000 		.4byte	.LFB9
 1182 003c 0C000000 		.4byte	.LFE9
 1183 0040 00000000 		.4byte	.LFB10
 1184 0044 0C000000 		.4byte	.LFE10
 1185 0048 00000000 		.4byte	.LFB11
 1186 004c 0C000000 		.4byte	.LFE11
 1187 0050 00000000 		.4byte	.LFB12
 1188 0054 0C000000 		.4byte	.LFE12
 1189 0058 00000000 		.4byte	.LFB13
 1190 005c 14000000 		.4byte	.LFE13
 1191 0060 00000000 		.4byte	.LFB14
 1192 0064 14000000 		.4byte	.LFE14
 1193 0068 00000000 		.4byte	.LFB0
 1194 006c 38000000 		.4byte	.LFE0
 1195 0070 00000000 		.4byte	.LFB2
 1196 0074 20000000 		.4byte	.LFE2
 1197 0078 00000000 		.4byte	0
 1198 007c 00000000 		.4byte	0
 1199              		.section	.debug_line,"",%progbits
 1200              	.Ldebug_line0:
 1201 0000 7E010000 		.section	.debug_str,"MS",%progbits,1
 1201      02005200 
 1201      00000201 
 1201      FB0E0D00 
 1201      01010101 
 1202              	.LASF15:
 1203 0000 72656731 		.ascii	"reg16\000"
 1203      3600
 1204              	.LASF26:
 1205 0006 4D494E5F 		.ascii	"MIN_TIME_ReadPeriod\000"
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 36


 1205      54494D45 
 1205      5F526561 
 1205      64506572 
 1205      696F6400 
 1206              	.LASF17:
 1207 001a 4D494E5F 		.ascii	"MIN_TIME_Enable\000"
 1207      54494D45 
 1207      5F456E61 
 1207      626C6500 
 1208              	.LASF28:
 1209 002a 70657269 		.ascii	"period\000"
 1209      6F6400
 1210              	.LASF3:
 1211 0031 73686F72 		.ascii	"short unsigned int\000"
 1211      7420756E 
 1211      7369676E 
 1211      65642069 
 1211      6E7400
 1212              	.LASF29:
 1213 0044 4D494E5F 		.ascii	"MIN_TIME_ReadCapture\000"
 1213      54494D45 
 1213      5F526561 
 1213      64436170 
 1213      74757265 
 1214              	.LASF19:
 1215 0059 4D494E5F 		.ascii	"MIN_TIME_SoftwareCapture\000"
 1215      54494D45 
 1215      5F536F66 
 1215      74776172 
 1215      65436170 
 1216              	.LASF33:
 1217 0072 4D494E5F 		.ascii	"MIN_TIME_ClearFIFO\000"
 1217      54494D45 
 1217      5F436C65 
 1217      61724649 
 1217      464F00
 1218              	.LASF37:
 1219 0085 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\MIN_TIME.c\000"
 1219      6E657261 
 1219      7465645F 
 1219      536F7572 
 1219      63655C50 
 1220              	.LASF22:
 1221 00a9 4D494E5F 		.ascii	"MIN_TIME_SetInterruptMode\000"
 1221      54494D45 
 1221      5F536574 
 1221      496E7465 
 1221      72727570 
 1222              	.LASF11:
 1223 00c3 666C6F61 		.ascii	"float\000"
 1223      7400
 1224              	.LASF31:
 1225 00c9 636F756E 		.ascii	"counter\000"
 1225      74657200 
 1226              	.LASF7:
 1227 00d1 6C6F6E67 		.ascii	"long long unsigned int\000"
 1227      206C6F6E 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 37


 1227      6720756E 
 1227      7369676E 
 1227      65642069 
 1228              	.LASF1:
 1229 00e8 756E7369 		.ascii	"unsigned char\000"
 1229      676E6564 
 1229      20636861 
 1229      7200
 1230              	.LASF34:
 1231 00f6 4D494E5F 		.ascii	"MIN_TIME_Init\000"
 1231      54494D45 
 1231      5F496E69 
 1231      7400
 1232              	.LASF32:
 1233 0104 4D494E5F 		.ascii	"MIN_TIME_ReadCounter\000"
 1233      54494D45 
 1233      5F526561 
 1233      64436F75 
 1233      6E746572 
 1234              	.LASF5:
 1235 0119 6C6F6E67 		.ascii	"long unsigned int\000"
 1235      20756E73 
 1235      69676E65 
 1235      6420696E 
 1235      7400
 1236              	.LASF9:
 1237 012b 75696E74 		.ascii	"uint8\000"
 1237      3800
 1238              	.LASF25:
 1239 0131 636F6E74 		.ascii	"control\000"
 1239      726F6C00 
 1240              	.LASF38:
 1241 0139 453A5C73 		.ascii	"E:\\school\\ECEC304\\Lab6\\Tic.cydsn\000"
 1241      63686F6F 
 1241      6C5C4543 
 1241      45433330 
 1241      345C4C61 
 1242              	.LASF20:
 1243 015a 4D494E5F 		.ascii	"MIN_TIME_ReadStatusRegister\000"
 1243      54494D45 
 1243      5F526561 
 1243      64537461 
 1243      74757352 
 1244              	.LASF12:
 1245 0176 646F7562 		.ascii	"double\000"
 1245      6C6500
 1246              	.LASF21:
 1247 017d 4D494E5F 		.ascii	"MIN_TIME_ReadControlRegister\000"
 1247      54494D45 
 1247      5F526561 
 1247      64436F6E 
 1247      74726F6C 
 1248              	.LASF10:
 1249 019a 75696E74 		.ascii	"uint16\000"
 1249      313600
 1250              	.LASF41:
 1251 01a1 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 38


 1251      74657243 
 1251      72697469 
 1251      63616C53 
 1251      65637469 
 1252              	.LASF8:
 1253 01b8 756E7369 		.ascii	"unsigned int\000"
 1253      676E6564 
 1253      20696E74 
 1253      00
 1254              	.LASF42:
 1255 01c5 43794578 		.ascii	"CyExitCriticalSection\000"
 1255      69744372 
 1255      69746963 
 1255      616C5365 
 1255      6374696F 
 1256              	.LASF40:
 1257 01db 4D494E5F 		.ascii	"MIN_TIME_initVar\000"
 1257      54494D45 
 1257      5F696E69 
 1257      74566172 
 1257      00
 1258              	.LASF36:
 1259 01ec 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1259      4320342E 
 1259      382E3420 
 1259      32303134 
 1259      30353236 
 1260 021f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1260      20726576 
 1260      6973696F 
 1260      6E203231 
 1260      31333538 
 1261 0252 67202D66 		.ascii	"g -ffunction-sections\000"
 1261      66756E63 
 1261      74696F6E 
 1261      2D736563 
 1261      74696F6E 
 1262              	.LASF27:
 1263 0268 4D494E5F 		.ascii	"MIN_TIME_WritePeriod\000"
 1263      54494D45 
 1263      5F577269 
 1263      74655065 
 1263      72696F64 
 1264              	.LASF18:
 1265 027d 4D494E5F 		.ascii	"MIN_TIME_Stop\000"
 1265      54494D45 
 1265      5F53746F 
 1265      7000
 1266              	.LASF14:
 1267 028b 72656738 		.ascii	"reg8\000"
 1267      00
 1268              	.LASF39:
 1269 0290 4D494E5F 		.ascii	"MIN_TIME_interruptState\000"
 1269      54494D45 
 1269      5F696E74 
 1269      65727275 
 1269      70745374 
ARM GAS  C:\Users\egh35\AppData\Local\Temp\cc85lMgy.s 			page 39


 1270              	.LASF16:
 1271 02a8 73697A65 		.ascii	"sizetype\000"
 1271      74797065 
 1271      00
 1272              	.LASF6:
 1273 02b1 6C6F6E67 		.ascii	"long long int\000"
 1273      206C6F6E 
 1273      6720696E 
 1273      7400
 1274              	.LASF24:
 1275 02bf 696E7465 		.ascii	"interruptMode\000"
 1275      72727570 
 1275      744D6F64 
 1275      6500
 1276              	.LASF35:
 1277 02cd 4D494E5F 		.ascii	"MIN_TIME_Start\000"
 1277      54494D45 
 1277      5F537461 
 1277      727400
 1278              	.LASF23:
 1279 02dc 4D494E5F 		.ascii	"MIN_TIME_WriteControlRegister\000"
 1279      54494D45 
 1279      5F577269 
 1279      7465436F 
 1279      6E74726F 
 1280              	.LASF2:
 1281 02fa 73686F72 		.ascii	"short int\000"
 1281      7420696E 
 1281      7400
 1282              	.LASF4:
 1283 0304 6C6F6E67 		.ascii	"long int\000"
 1283      20696E74 
 1283      00
 1284              	.LASF13:
 1285 030d 63686172 		.ascii	"char\000"
 1285      00
 1286              	.LASF0:
 1287 0312 7369676E 		.ascii	"signed char\000"
 1287      65642063 
 1287      68617200 
 1288              	.LASF30:
 1289 031e 4D494E5F 		.ascii	"MIN_TIME_WriteCounter\000"
 1289      54494D45 
 1289      5F577269 
 1289      7465436F 
 1289      756E7465 
 1290              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
